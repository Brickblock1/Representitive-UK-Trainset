# 1 "ruktsna.pnml"

# 1 "src/header.pnml" 1
grf{
	grfid                  : "RTNA" ;
	name                   : string(STR_GRF_NAME) ;
	desc                   : string(STR_GRF_DESC) ;
	version                : 4 ;
	min_compatible_version : 4 ;
}

//Cargo table

cargotable {
//Default cargos
   PASS, MAIL, COAL, FOOD, GOLD, GOOD, GRAI, IORE, LVST, OIL_, PAPR, STEL, VALU, WHEA, WOOD,

//Tropical cargos
   CORE, DIAM, FRUT, MAIZ, RUBR, WATR, 

//ECS
   AORE, BDMT, BRCK, CERA, CERE, CMNT, DYES, FERT, FICR, FISH, GLAS, LIME, OLSD, PETR, PLAS, POTA, RFPR, SAND, SULP, TOUR, VEHI, WDPR, WOOL, 
   
//FIRS
   BEER, CLAY, ENSP, FMSP, FRVG, GRVL, MILK, MNSP, PHOS, PORE, RCYC, SCMT, SGBT, SGCN, JAVA, COPR, SUGR,
   
//Nuclear stuff
	URAN, NWST
}

//Rail-type table

railtypetable {
    RAIL, 
	ELRL,
	SAA3: ["3RDR", ELRL],
	SAAZ: ["3RDC", ELRL],
	SAA4: [SAA3, ELRL],
	NAAN: [NAAN, NRGL, RAIL]
}



//Uranium cargo

spriteset(gfx_nwst_cargo_icon, "gfx/nuclear_reprocessing_site.png"){[69, 186, 10, 10, 0, 0]}


item(FEAT_CARGOS, cargo_uranium, 30){
	property{
		number                    : 30 ;
		type_name                 : string(STR_URAN_NAME) ;
		unit_name                 : string(STR_URAN_NAME) ;
		units_of_cargo            : TTD_STR_TONS ;
		items_of_cargo            : string(STR_URAN_ITEMS_OF_CARGO) ;
		type_abbreviation         : string(STR_URAN_ABBREV) ;
		sprite                    : NEW_CARGO_SPRITE ;
		weight                    : 4 ;
		penalty_lowerbound        : 10 ;
		single_penalty_length     : 2 ;
		price_factor              : 190 ;
		station_list_colour       : 205 ;
		cargo_payment_list_colour : 205 ;
		is_freight                : 1 ;
		cargo_classes             : bitmask(CC_HAZARDOUS) ;
		cargo_label               : "URAN" ;
		capacity_multiplier       : 0.5 ;
	}
	graphics{
		default : gfx_nwst_cargo_icon ;
	}
}


//Nuclear waste cargo

item(FEAT_CARGOS, cargo_nuclear_waste, 31){
	property{
		number                    : 31 ;
		type_name                 : string(STR_NWST_NAME) ;
		unit_name                 : string(STR_NWST_NAME) ;
		units_of_cargo            : TTD_STR_TONS ;
		items_of_cargo            : string(STR_NWST_ITEMS_OF_CARGO) ;
		type_abbreviation         : string(STR_NWST_ABBREV) ;
		sprite                    : NEW_CARGO_SPRITE ;
		weight                    : 3 ;
		penalty_lowerbound        : 6 ;
		single_penalty_length     : 4 ;
		price_factor              : 215 ;
		station_list_colour       : 208 ;
		cargo_payment_list_colour : 208 ;
		is_freight                : 1 ;
		cargo_classes             : bitmask(CC_HAZARDOUS) ;
		cargo_label               : "NWST" ;
		capacity_multiplier       : 0.5 ;
	}
	graphics{
		default : gfx_nwst_cargo_icon ;
	}
}


spriteset(gfx_fence_ne         , "gfx/base_tile.png"){[ 66 , 0  , 64, 40 , -31, -9  ]}
spriteset(gfx_fence_se         , "gfx/base_tile.png"){[ 66 , 41 , 64, 40 , -31, -9  ]}
spriteset(gfx_fence_sw         , "gfx/base_tile.png"){[ 0  , 41 , 64, 40 , -31, -9  ]}
spriteset(gfx_fence_nw         , "gfx/base_tile.png"){[ 0  , 0  , 64, 40 , -31, -9  ]}
spriteset(gfx_fence_e          , "gfx/base_tile.png"){[ 198, 0  , 64, 40 , -31, -9  ]}
spriteset(gfx_fence_s          , "gfx/base_tile.png"){[ 198, 41 , 64, 40 , -31, -9  ]}
spriteset(gfx_fence_w          , "gfx/base_tile.png"){[ 132, 41 , 64, 40 , -31, -9  ]}
spriteset(gfx_fence_n          , "gfx/base_tile.png"){[ 132, 0  , 64, 40 , -31, -9  ]}



# 1 "ruktsna.pnml" 2
# 1 "src/narrow_gauge.pnml" 1
//Narrow Gauge Tracks

//Graphics

spriteset(gfx_narrow_track, "gfx/narrow_gauge.png"){
	[ 0  , 72 , 40 , 21 , -19,  5  ] //North East
	[ 50 , 72 , 40 , 21 , -19,  5  ] //North West
	[ 100, 72 , 40 , 7  , -19,  4  ] //Horizontal Top
	[ 150, 72 , 40 , 7  , -19, 20  ] //Horizontal Bottom
	[ 200, 72 , 12 , 19 , 11 ,  6  ] //Vertical Right
	[ 224, 72 , 12 , 19 , -21,  6  ] //Vertical Left
	[ 259, 72 , 36 , 27 , -17, -2  ] //Slope NE
	[ 342, 72 , 37 , 12 , -18,  6  ] //Slope SE
	[ 383, 72 , 37 , 12 , -19,  6  ] //Slope SW
	[ 299, 72 , 36 , 27 , -17, -2  ] //Slope NW
}

spriteset(gfx_narrow_trackbed, "gfx/narrow_gauge.png"){
	[ 0  , 72 , 40 , 21 , -19,  5  ] //North East
	[ 50 , 72 , 40 , 21 , -19,  5  ] //North West
	[ 100, 72 , 40 , 7  , -19,  4  ] //Horizontal Top
	[ 150, 72 , 40 , 7  , -19, 20  ] //Horizontal Bottom
	[ 200, 72 , 12 , 19 , 11 ,  6  ] //Vertical Right
	[ 224, 72 , 12 , 19 , -21,  6  ] //Vertical Left
	[ 259, 72 , 36 , 27 , -17, -2  ] //Slope NE
	[ 342, 72 , 37 , 12 , -18,  6  ] //Slope SE
	[ 383, 72 , 37 , 12 , -19,  6  ] //Slope SW
	[ 299, 72 , 36 , 27 , -17, -2  ] //Slope NW
	[ 40 , 98 , 40 , 21 , -19, 5   ] //Cross over
	[ 0  , 72 , 1  , 1  , 0  , 0   ] 
	[ 0  , 72 , 1  , 1  , 0  , 0   ] 
	[ 0  , 72 , 1  , 1  , 0  , 0   ] 
	[ 0  , 72 , 1  , 1  , 0  , 0   ] 
	[ 0  , 72 , 1  , 1  , 0  , 0   ] 
}

spriteset(gfx_narrow_bridges, "gfx/narrow_gauge.png"){
	[ 0  , 72 , 40 , 21 , -19,  5  ] //North East
	[ 50 , 72 , 40 , 21 , -19,  5  ] //North West
	[ 259, 72 , 36 , 27 , -17, -2  ] //Slope NE
	[ 342, 72 , 37 , 12 , -18,  6  ] //Slope SE
	[ 383, 72 , 37 , 12 , -19,  6  ] //Slope SW
	[ 299, 72 , 36 , 27 , -17, -2  ] //Slope NW
	[ 40 , 98 , 40 , 21 , -19, 5   ] //Cross over
}

spriteset(gfx_narrow_tunnels, "gfx/narrow_gauge.png"){
	[ 0  , 72 , 40 , 21 , -19,  5  ] //North East
	[ 50 , 72 , 40 , 21 , -19,  5  ] //North West
	[ 0  , 72 , 40 , 21 , -19,  5  ] //North East
	[ 50 , 72 , 40 , 21 , -19,  5  ] //North West
}

spriteset(gfx_narrow_level_crossing, "gfx/narrow_gauge.png"){
	[ 0  , 72 , 1  , 1  , 0  , 0   ] 
	[ 0  , 72 , 1  , 1  , 0  , 0   ] 
	[ 0  , 72 , 1  , 1  , 0  , 0   ] 
	[ 0  , 72 , 1  , 1  , 0  , 0   ] 
	[ 0  , 72 , 1  , 1  , 0  , 0   ] 
	[ 0  , 72 , 1  , 1  , 0  , 0   ] 
	[ 0  , 72 , 1  , 1  , 0  , 0   ] 
	[ 0  , 72 , 1  , 1  , 0  , 0   ] 
}

/*
spriteset(gfx_narrow_track_diag_y, "gfx/TRACKS/narrow_gauge.png"){}
spriteset(gfx_narrow_track_hori_s, "gfx/TRACKS/narrow_gauge.png"){}
spriteset(gfx_narrow_track_hori_n, "gfx/TRACKS/narrow_gauge.png"){}
spriteset(gfx_narrow_track_vert_l, "gfx/TRACKS/narrow_gauge.png"){}
spriteset(gfx_narrow_track_vert_r, "gfx/TRACKS/narrow_gauge.png"){}
*/


item(FEAT_RAILTYPES, narrow_rail, 5) {
	property {
		label                     : "NAAN" ;
		name                      : string(STR_NAAN_NAME) ;
		menu_text                 : string(STR_NAAN_NAME) ;
		build_window_caption      : string(STR_NAAN_BUILD_NAME) ;
		autoreplace_text          : string(STR_NAAN_REPLACE_NAME) ;
		new_engine_text           : string(STR_NAAN_NEW_TRAIN) ;
		compatible_railtype_list  : ["NAAN", "NRGL"] ;
		powered_railtype_list     : ["NAAN", "NRGL"] ;
		curve_speed_multiplier    : 1 ;
		station_graphics          : RAILTYPE_STATION_NORMAL ;
		construction_cost         : 40 ;
		speed_limit               : 50 mph ;
		acceleration_model        : ACC_MODEL_RAIL ;
		railtype_flags            : bitmask(RAILTYPE_FLAG_NO_LEVEL_CROSSING) ;
		//introduction_date         : date(1869,1,1) ;
	}
	graphics {
		track_overlay   : gfx_narrow_track ;
		underlay        : gfx_narrow_trackbed ;
		bridge_surfaces : gfx_narrow_bridges ;
		tunnels         : gfx_narrow_tunnels ;
		level_crossings : gfx_narrow_level_crossing ;
		//depots          : 
		//fences          : 
	}
}
# 1 "ruktsna.pnml" 2
# 1 "src/nuclear_site.pnml" 1
//Graphics

spriteset(gfx_nucrep_empty_tile         , "gfx/nuclear_reprocessing_site.png"){[ 0  , 208, 64, 40 , -31, -9  ]}
spriteset(gfx_nucrep_empty_tile_loaded  , "gfx/nuclear_reprocessing_site.png"){[ 66 , 208, 64, 40 , -31, -10 ]}
spriteset(gfx_nucrep_forklift           , "gfx/nuclear_reprocessing_site.png"){[ 156, 124, 64, 41 , -31, -9  ]}
spriteset(gfx_nucrep_forklift_loaded    , "gfx/nuclear_reprocessing_site.png"){[ 156, 167, 64, 41 , -31, -10 ]}
spriteset(gfx_nucrep_overpass           , "gfx/nuclear_reprocessing_site.png"){[ 69 , 124, 85, 60 , -31, -29 ]}
spriteset(gfx_nucrep_shed               , "gfx/nuclear_reprocessing_site.png"){[ 0  , 155, 67, 51 , -32, -20 ]}
spriteset(gfx_nucrep_sphere_tank        , "gfx/nuclear_reprocessing_site.png"){[ 66 , 58 , 64, 64 , -31, -33 ]}
spriteset(gfx_nucrep_road_overlay       , "gfx/nuclear_reprocessing_site.png"){[ 111, 0  , 96, 47 , -31, -16 ]}
spriteset(gfx_nucrep_cooling_tower      , "gfx/nuclear_reprocessing_site.png"){[ 66 , 0  , 43, 56 , -21, -32 ]}
spriteset(gfx_nucrep_chimney_building_1 , "gfx/nuclear_reprocessing_site.png"){[ 342, 110, 64, 138, -31, -107]}
spriteset(gfx_nucrep_chimney_building_2 , "gfx/nuclear_reprocessing_site.png"){[ 408, 110, 64, 138, -31, -107]}
spriteset(gfx_nucrep_chimney_building_3 , "gfx/nuclear_reprocessing_site.png"){[ 474, 110, 64, 138, -31, -107]}
spriteset(gfx_nucrep_chimney_building_4 , "gfx/nuclear_reprocessing_site.png"){[ 540, 110, 64, 138, -31, -107]}
spriteset(gfx_nucrep_generic_building   , "gfx/nuclear_reprocessing_site.png"){[ 0  , 87 , 64, 66 , -31, -35 ]}


//Sprite layouts

switch(FEAT_INDUSTRYTILES, SELF, sw_nucrep_container_colour_check, current_year){ 1960..1995 : palette_1cc(COLOUR_YELLOW) ; palette_1cc(COLOUR_WHITE) ; }

spritelayout spritelayout_cooling_tower {
	ground { sprite : gfx_nucrep_empty_tile ; }
	building { sprite : gfx_nucrep_cooling_tower ; }
}

spritelayout spritelayout_empty_tile {
	ground { sprite : gfx_nucrep_empty_tile ; }
	//building { sprite : gfx_nucrep_empty_tile ; }
}

spritelayout spritelayout_empty_tile_cargo {
	ground { sprite : gfx_nucrep_empty_tile ; }
	building { sprite : gfx_nucrep_empty_tile_loaded ; recolour_mode : RECOLOUR_REMAP ; palette : palette_1cc(COLOUR_YELLOW) ; }
}

spritelayout spritelayout_forklift {
	ground { sprite : gfx_nucrep_empty_tile ; }
	building { sprite : gfx_nucrep_forklift ; }
}

spritelayout spritelayout_forklift_cargo {
	ground { sprite : gfx_nucrep_empty_tile ; }
	building { sprite : gfx_nucrep_forklift_loaded ; recolour_mode : RECOLOUR_REMAP ; palette : palette_1cc(COLOUR_YELLOW) ; }
}

spritelayout spritelayout_overpass {
	ground { sprite : gfx_nucrep_empty_tile ; }
	building { sprite : gfx_nucrep_overpass ; }
}

spritelayout spritelayout_shed {
	ground { sprite : gfx_nucrep_empty_tile ; }
	building { sprite : gfx_nucrep_shed ; recolour_mode : RECOLOUR_REMAP ; palette : palette_1cc(COLOUR_YELLOW) ; }
}

spritelayout spritelayout_sphere_tank {
	ground { sprite : gfx_nucrep_empty_tile ; }
	building { sprite : gfx_nucrep_sphere_tank ; }
}

spritelayout spritelayout_road_overlay {
	ground { sprite : gfx_nucrep_road_overlay ; }
	//building { sprite : gfx_nucrep_road_overlay ; }
}

spritelayout spritelayout_chimney_building_1 {
	ground { sprite : gfx_nucrep_empty_tile ; }
	building { sprite : gfx_nucrep_chimney_building_1 ; }
}

spritelayout spritelayout_chimney_building_2 {
	ground { sprite : gfx_nucrep_empty_tile ; }
	building { sprite : gfx_nucrep_chimney_building_2 ; }
}

spritelayout spritelayout_chimney_building_3 {
	ground { sprite : gfx_nucrep_empty_tile ; }
	building { sprite : gfx_nucrep_chimney_building_3 ; }
}

spritelayout spritelayout_chimney_building_4 {
	ground { sprite : gfx_nucrep_empty_tile ; }
	building { sprite : gfx_nucrep_chimney_building_4 ; }
}

spritelayout spritelayout_generic_building {
	ground { sprite : gfx_nucrep_empty_tile ; }
	building { sprite : gfx_nucrep_generic_building ; }
}

//Sprite layout switches

switch(FEAT_INDUSTRYTILES, PARENT, sw_nucrep_empty_cargo_decider, waiting_cargo_1 > 0){
	1 : spritelayout_empty_tile_cargo ;
	spritelayout_empty_tile ;
}

switch(FEAT_INDUSTRYTILES, PARENT, sw_nucrep_forklift_cargo_decider, waiting_cargo_1 > 0){
	1 : spritelayout_forklift_cargo ;
	spritelayout_forklift ;
}

switch(FEAT_INDUSTRYTILES, SELF, sw_nucrep_chimney_animation_decider, animation_frame){
	0 : spritelayout_chimney_building_1 ;
	1 : spritelayout_chimney_building_2 ;
	2 : spritelayout_chimney_building_3 ;
	spritelayout_chimney_building_4 ;
}



//Tile graphics decider

switch(FEAT_INDUSTRYTILES, SELF, nucrep_tile_gfx_decider, relative_pos){
	relative_coord(0,0) : spritelayout_cooling_tower ;
	relative_coord(0,1) : spritelayout_sphere_tank ;
	relative_coord(0,2) : spritelayout_generic_building ;
	relative_coord(0,3) : spritelayout_generic_building ;
	relative_coord(0,4) : spritelayout_generic_building ;
	relative_coord(0,5) : spritelayout_sphere_tank ;
	
	relative_coord(1,0) : spritelayout_cooling_tower ;
	relative_coord(1,1) : spritelayout_shed ;
	relative_coord(1,2) : spritelayout_shed ;
	relative_coord(1,3) : spritelayout_shed ;
	relative_coord(1,4) : spritelayout_shed ;
	relative_coord(1,5) : sw_nucrep_forklift_cargo_decider ;
	//Skip a row
	relative_coord(3,0) : spritelayout_cooling_tower ;
	relative_coord(3,1) : spritelayout_chimney_building_1 ;
	relative_coord(3,2) : sw_nucrep_forklift_cargo_decider ;
	relative_coord(3,3) : spritelayout_overpass ;
	relative_coord(3,4) : sw_nucrep_empty_cargo_decider ;
	relative_coord(3,5) : sw_nucrep_empty_cargo_decider ;
	
	relative_coord(4,0) : spritelayout_cooling_tower ;
	relative_coord(4,1) : spritelayout_chimney_building_1 ;
	relative_coord(4,2) : sw_nucrep_empty_cargo_decider ;
	relative_coord(4,3) : spritelayout_shed ;
	relative_coord(4,4) : spritelayout_chimney_building_1 ;
	relative_coord(4,5) : sw_nucrep_forklift_cargo_decider ;
	//Skip a row
	relative_coord(6,0) : spritelayout_road_overlay ;
	relative_coord(6,1) : spritelayout_road_overlay ;
	relative_coord(6,2) : spritelayout_road_overlay ;
	relative_coord(6,3) : spritelayout_road_overlay ;
	relative_coord(6,4) : spritelayout_road_overlay ;
	relative_coord(6,5) : spritelayout_road_overlay ;
}


//Industry tiles

item(FEAT_INDUSTRYTILES, nucrep_tile){
	property{
		substitute       : 0 ;
		accepted_cargos  : [[NWST, 8]] ;
		land_shape_flags : bitmask(LSF_ONLY_ON_FLAT_LAND) ;
	}
	graphics{
		default : nucrep_tile_gfx_decider ;
	}
}

/*
item(FEAT_INDUSTRYTILES, nucrep_cooling_tower){
	property{
		substitute         : 0 ;
		accepted_cargos    : [] ;
		land_shape_flags   : bitmask(LSF_ONLY_ON_FLAT_LAND) ;
	}
	graphics{
		default      : nucrep_tile_gfx_decider ;
	}
}
*/

switch (FEAT_INDUSTRYTILES, SELF, nucrep_chimney_animation, animation_frame) {
	0..2 : CB_RESULT_NEXT_FRAME ;
	return 0 ;
}

item(FEAT_INDUSTRYTILES, nucrep_chimney){
	property{
		substitute       : 0x07 ;
		accepted_cargos  : [[NWST, 8]] ;
		land_shape_flags : bitmask(LSF_ONLY_ON_FLAT_LAND) ;
		animation_info     : [ANIMATION_LOOPING, 4] ;
		animation_speed    : 2 ;
		animation_triggers : bitmask(ANIM_TRIGGER_INDTILE_TILE_LOOP) ;
	}
	graphics{
		default         : sw_nucrep_chimney_animation_decider ;
		anim_next_frame : nucrep_chimney_animation ;
		//anim_control    : CB_RESULT_START_ANIMATION ;
	}
}


//Tile layout

tilelayout tilelayout_nucrep_site_big{
	0,0 : nucrep_tile ;
	0,1 : nucrep_tile ;
	0,2 : nucrep_tile ;
	0,3 : nucrep_tile ;

	1,0 : nucrep_tile ;
	1,1 : nucrep_tile ;
	1,2 : nucrep_tile ;
	1,3 : nucrep_tile ;

	3,0 : nucrep_tile ;
	3,1 : nucrep_chimney ;  //chimney
	3,2 : nucrep_tile ;
	3,3 : nucrep_tile ;
      
	4,0 : nucrep_tile ;
	4,1 : nucrep_chimney ; //chimney
	4,2 : nucrep_tile ;
	4,3 : nucrep_tile ;
	  
	6,0 : nucrep_tile ;
	6,1 : nucrep_tile ;
	6,2 : nucrep_tile ;
	6,3 : nucrep_tile ;
}

tilelayout tilelayout_nucrep_site_medium{
	0,0 : nucrep_tile ;
	0,1 : nucrep_tile ;
	0,2 : nucrep_tile ;
	0,3 : nucrep_tile ;
	0,4 : nucrep_tile ;
	0,5 : nucrep_tile ;

	1,0 : nucrep_tile ;
	1,1 : nucrep_tile ;
	1,2 : nucrep_tile ;
	1,3 : nucrep_tile ;
	1,4 : nucrep_tile ;
	1,5 : nucrep_tile ;

	3,0 : nucrep_tile ;
	3,1 : nucrep_chimney ; //chimney
	3,2 : nucrep_tile ;
	3,3 : nucrep_tile ;
	3,4 : nucrep_tile ;
	3,5 : nucrep_tile ;
      
	4,0 : nucrep_tile ;
	4,1 : nucrep_chimney ; //chimney
	4,2 : nucrep_tile ;
	4,3 : nucrep_tile ;
	4,4 : nucrep_chimney ; //chimney
	4,5 : nucrep_tile ;
}

tilelayout tilelayout_nucrep_site_small{
	0,0 : nucrep_tile ;
	0,1 : nucrep_tile ;
	0,2 : nucrep_tile ;
	0,3 : nucrep_tile ;
	0,4 : nucrep_tile ;
	0,5 : nucrep_tile ;

	1,0 : nucrep_tile ;
	1,1 : nucrep_tile ;
	1,2 : nucrep_tile ;
	1,3 : nucrep_tile ;
	1,4 : nucrep_tile ;
	1,5 : nucrep_tile ;
}

 /* Every month, the counter is increased. The counter is reset to zero whenever the power plant
    receives cargo. When the counter reaches 61, the industry will close when the random production
    change callback is called. */
 
 /* When we receive cargo, the counter is reset. */
 produce(nucrep_cargo_arrive_produce, 0, 0, 0, 0, STORE_PERM(0, 0x00));
 
 /* Every month the counter is increased. */
 switch (FEAT_INDUSTRIES, SELF, sw_nucrep_monthly_prod_change_switch, STORE_PERM(LOAD_PERM(0x00) + 1, 0x00)) {
 	return CB_RESULT_IND_PROD_NO_CHANGE;
 }
 
 switch (FEAT_INDUSTRIES, SELF, sw_nucrep_monthly_prod_change_check, waiting_cargo_1){
	0 : sw_nucrep_monthly_prod_change_switch ;
	CB_RESULT_IND_PROD_NO_CHANGE ;
 }
 
 /* Only check industry closure if the counter is greater than 60. */
 switch (FEAT_INDUSTRIES, SELF, sw_nucrep_random_prod_change_switch, LOAD_PERM(0x00)) {
 	0..60: return CB_RESULT_IND_PROD_NO_CHANGE;
 	return CB_RESULT_IND_PROD_CLOSE;
 }

switch (FEAT_INDUSTRIES, SELF, sw_nucrep_water_check, water_distance){
	0..32 : CB_RESULT_LOCATION_ALLOW ;
	return string(STR_ERROR_NOT_NEAR_WATER) ;
}

produce(nucrep_produce_monthly, 2, 0, 0, 0, 0);

item(FEAT_INDUSTRIES, nuclear_reprocessing_site, 0){
	property {
		substitute            : 0x01 ;
		layouts               : [tilelayout_nucrep_site_big, tilelayout_nucrep_site_medium, tilelayout_nucrep_site_small] ;
		life_type             : IND_LIFE_TYPE_BLACK_HOLE ;
		fund_cost_multiplier  : 255 ;
		prod_cargo_types      : [] ;
		accept_cargo_types    : [cargotype("NWST")] ;
		conflicting_ind_types : [industry_type(IND_TYPE_OLD, 0x01), industry_type(IND_TYPE_NEW, 0), industry_type(IND_TYPE_NEW, 1)] ;
		prob_map_gen           : 3 ;
		prob_in_game          : 1 ;
		map_colour            : 208 ;
		spec_flags            : bitmask(IND_FLAG_BUILT_ONLY_AFTER_1960) ;
		new_ind_msg           : TTD_STR_NEWS_INDUSTRY_CONSTRUCTION ;
		name                  : string(STR_NUCPROC_NAME) ;
		nearby_station_name   : string(STR_NUCPROC_STATION_NAME) ;
	}
	graphics {
		produce_cargo_arrival : nucrep_cargo_arrive_produce ;
		produce_256_ticks     : nucrep_produce_monthly ;
		location_check        : sw_nucrep_water_check ;
		monthly_prod_change   : sw_nucrep_monthly_prod_change_check ;
		random_prod_change    : sw_nucrep_random_prod_change_switch ;
		//colour                : sw_nucrep_colour_check ;
	}
}
# 1 "ruktsna.pnml" 2
# 1 "src/power_station.pnml" 1
//Graphics

template template_btrsea(x, y){ [ x  , y  , 64 , 122, -31 , -91] }

spriteset(gfx_btrsea_1_0       , "gfx/battersea_power_station.png"){ template_btrsea( 0  , 0  ) }
spriteset(gfx_btrsea_2_0       , "gfx/battersea_power_station.png"){ template_btrsea( 65 , 0  ) }
spriteset(gfx_btrsea_3_0       , "gfx/battersea_power_station.png"){ [ 130, 0  , 64 , 122, -33 , -92] }
spriteset(gfx_btrsea_1_1       , "gfx/battersea_power_station.png"){ template_btrsea( 195, 0  ) }
spriteset(gfx_btrsea_2_1       , "gfx/battersea_power_station.png"){ template_btrsea( 260, 0  ) }
spriteset(gfx_btrsea_3_1       , "gfx/battersea_power_station.png"){ template_btrsea( 325, 0  ) }

spriteset(gfx_btrsea_3_0_pig_1 , "gfx/battersea_power_station.png"){ [ 0  , 123, 71 , 134, -33 , -104] }
spriteset(gfx_btrsea_3_0_pig_2 , "gfx/battersea_power_station.png"){ [ 72 , 123, 71 , 134, -33 , -104] }
spriteset(gfx_btrsea_3_0_pig_3 , "gfx/battersea_power_station.png"){ [ 144, 123, 71 , 134, -33 , -104] }
spriteset(gfx_btrsea_3_0_pig_4 , "gfx/battersea_power_station.png"){ [ 216, 123, 71 , 134, -33 , -104] }

spriteset(gfx_btrsea_1_0_1     , "gfx/battersea_power_station.png"){ [ 0  , 258, 92 , 147, -31 , -116] }  
spriteset(gfx_btrsea_1_0_2     , "gfx/battersea_power_station.png"){ [ 93 , 258, 92 , 147, -31 , -116] }  
spriteset(gfx_btrsea_1_0_3     , "gfx/battersea_power_station.png"){ [ 186, 258, 92 , 147, -31 , -116] }  
spriteset(gfx_btrsea_1_0_4     , "gfx/battersea_power_station.png"){ [ 279, 258, 92 , 147, -31 , -116] }  

spriteset(gfx_btrsea_3_0_1     , "gfx/battersea_power_station.png"){ [ 0  , 406, 72 , 135, -33 , -105] }
spriteset(gfx_btrsea_3_0_2     , "gfx/battersea_power_station.png"){ [ 73 , 406, 72 , 135, -33 , -105] }
spriteset(gfx_btrsea_3_0_3     , "gfx/battersea_power_station.png"){ [ 146, 406, 72 , 135, -33 , -105] }
spriteset(gfx_btrsea_3_0_4     , "gfx/battersea_power_station.png"){ [ 219, 406, 72 , 135, -33 , -105] }

spriteset(gfx_btrsea_1_1_1     , "gfx/battersea_power_station.png"){ [ 0  , 542, 84 , 152, -31 , -121] }  
spriteset(gfx_btrsea_1_1_2     , "gfx/battersea_power_station.png"){ [ 85 , 542, 84 , 152, -31 , -121] }    
spriteset(gfx_btrsea_1_1_3     , "gfx/battersea_power_station.png"){ [ 170, 542, 84 , 152, -31 , -121] }    
spriteset(gfx_btrsea_1_1_4     , "gfx/battersea_power_station.png"){ [ 255, 542, 84 , 152, -31 , -121] }    

spriteset(gfx_btrsea_3_1_1     , "gfx/battersea_power_station.png"){ [ 0  , 695, 64 , 140, -31 , -109] }  
spriteset(gfx_btrsea_3_1_2     , "gfx/battersea_power_station.png"){ [ 65 , 695, 64 , 140, -31 , -109] }    
spriteset(gfx_btrsea_3_1_3     , "gfx/battersea_power_station.png"){ [ 130, 695, 64 , 140, -31 , -109] }    
spriteset(gfx_btrsea_3_1_4     , "gfx/battersea_power_station.png"){ [ 195, 695, 64 , 140, -31 , -109] }    

spriteset(gfx_btrsea_coal_med  , "gfx/battersea_power_station.png"){ [ 390, 0  , 64 , 34 , -31 , -3  ] } 
spriteset(gfx_btrsea_coal_full , "gfx/battersea_power_station.png"){ [ 455, 0  , 64 , 34 , -31 , -3  ] } 
spriteset(gfx_btrsea_tank      , "gfx/battersea_power_station.png"){ [ 390 , 35, 64 , 44 , -31 , -13 ] } 



//Sprite layouts

spritelayout spritelayout_btrsea_1_0   	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_1_0 ;       zextent : 80 ;} }
spritelayout spritelayout_btrsea_1_0_1 	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_1_0_1 ;     zextent : 80 ;} }
spritelayout spritelayout_btrsea_1_0_2 	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_1_0_2 ;     zextent : 80 ;} }
spritelayout spritelayout_btrsea_1_0_3 	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_1_0_3 ;     zextent : 80 ;} }
spritelayout spritelayout_btrsea_1_0_4 	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_1_0_4 ;     zextent : 80 ;} }

spritelayout spritelayout_btrsea_2_0 	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_2_0 ;       zextent : 80 ;} }

spritelayout spritelayout_btrsea_3_0 	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_3_0 ;       zextent : 80 ;} }
spritelayout spritelayout_btrsea_3_0_1	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_3_0_1 ;     zextent : 80 ;} }
spritelayout spritelayout_btrsea_3_0_2	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_3_0_2 ;     zextent : 80 ;} }
spritelayout spritelayout_btrsea_3_0_3	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_3_0_3 ;     zextent : 80 ;} }
spritelayout spritelayout_btrsea_3_0_4	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_3_0_4 ;     zextent : 80 ;} }

spritelayout spritelayout_btrsea_1_1 	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_1_1 ;       zextent : 80 ;} }
spritelayout spritelayout_btrsea_1_1_1	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_1_1_1 ;     zextent : 80 ;} }
spritelayout spritelayout_btrsea_1_1_2	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_1_1_2 ;     zextent : 80 ;} }
spritelayout spritelayout_btrsea_1_1_3	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_1_1_3 ;     zextent : 80 ;} }
spritelayout spritelayout_btrsea_1_1_4	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_1_1_4 ;     zextent : 80 ;} }

spritelayout spritelayout_btrsea_2_1	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_2_1 ;       zextent : 80 ;} }

spritelayout spritelayout_btrsea_3_1 	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_3_1 ;       zextent : 80 ;} }
spritelayout spritelayout_btrsea_3_1_1	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_3_1_1 ;     zextent : 80 ;} }
spritelayout spritelayout_btrsea_3_1_2	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_3_1_2 ;     zextent : 80 ;} }
spritelayout spritelayout_btrsea_3_1_3	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_3_1_3 ;     zextent : 80 ;} }
spritelayout spritelayout_btrsea_3_1_4	   { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_3_1_4 ;     zextent : 80 ;} }
	
spritelayout spritelayout_btrsea_3_0_pig_1 { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_3_0_pig_1 ; zextent : 80 ;} }
spritelayout spritelayout_btrsea_3_0_pig_2 { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_3_0_pig_2 ; zextent : 80 ;} }
spritelayout spritelayout_btrsea_3_0_pig_3 { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_3_0_pig_3 ; zextent : 80 ;} }
spritelayout spritelayout_btrsea_3_0_pig_4 { ground { sprite : gfx_nucrep_empty_tile ; } building { sprite : gfx_btrsea_3_0_pig_4 ; zextent : 80 ;} }

spritelayout spritelayout_btrsea_coal_empty  { ground { sprite : gfx_fence_ne ; } }
spritelayout spritelayout_btrsea_coal_med  { ground { sprite : gfx_fence_ne ; } building { sprite : gfx_btrsea_coal_med ; } }
spritelayout spritelayout_btrsea_coal_full { ground { sprite : gfx_fence_ne ; } building { sprite : gfx_btrsea_coal_full ; } }
spritelayout spritelayout_btrsea_tank      { ground { sprite : gfx_fence_n ; } building { sprite : gfx_btrsea_tank ; } }


spritelayout spritelayout_btrsea_4_0 { ground { sprite : gfx_fence_w  ; } }
spritelayout spritelayout_btrsea_4_1 { ground { sprite : gfx_fence_sw ; } }
spritelayout spritelayout_btrsea_0_2 { ground { sprite : gfx_fence_e  ; } }
spritelayout spritelayout_btrsea_1_2 { ground { sprite : gfx_fence_se ; } }
spritelayout spritelayout_btrsea_4_2 { ground { sprite : gfx_fence_s  ; } }
//Tiles

//Base



switch(FEAT_INDUSTRYTILES, SELF, btrsea_empty_gfx_decider, relative_pos){
	relative_coord(4,0) : spritelayout_btrsea_4_0 ;
	relative_coord(4,1) : spritelayout_btrsea_4_1 ;
	relative_coord(0,2) : spritelayout_btrsea_0_2 ;
	relative_coord(1,2) : spritelayout_btrsea_1_2 ;
	relative_coord(2,2) : spritelayout_btrsea_1_2 ;
	relative_coord(3,2) : spritelayout_btrsea_1_2 ;
	relative_coord(4,2) : spritelayout_btrsea_4_2 ;
}


//Animations

switch(FEAT_INDUSTRYTILES, SELF, sw_btrsea_pig_animation, animation_frame){
	0 : spritelayout_btrsea_3_0_pig_1 ;
	1 : spritelayout_btrsea_3_0_pig_2 ;
	2 : spritelayout_btrsea_3_0_pig_3 ;
	spritelayout_btrsea_3_0_pig_4 ;
}

switch(FEAT_INDUSTRYTILES, SELF, sw_btrsea_1_0_animation, animation_frame){
	0 : spritelayout_btrsea_1_0_1 ;
	1 : spritelayout_btrsea_1_0_2 ;
	2 : spritelayout_btrsea_1_0_3 ;
	spritelayout_btrsea_1_0_4 ;
}

switch(FEAT_INDUSTRYTILES, SELF, sw_btrsea_3_0_animation, animation_frame){
	0 : spritelayout_btrsea_3_0_1 ;
	1 : spritelayout_btrsea_3_0_2 ;
	2 : spritelayout_btrsea_3_0_3 ;
	spritelayout_btrsea_3_0_4 ;
}

switch(FEAT_INDUSTRYTILES, SELF, sw_btrsea_1_1_animation, animation_frame){
	0 : spritelayout_btrsea_1_1_1 ;
	1 : spritelayout_btrsea_1_1_2 ;
	2 : spritelayout_btrsea_1_1_3 ;
	spritelayout_btrsea_1_1_4 ;
}

switch(FEAT_INDUSTRYTILES, SELF, sw_btrsea_3_1_animation, animation_frame){
	0 : spritelayout_btrsea_3_1_1 ;
	1 : spritelayout_btrsea_3_1_2 ;
	2 : spritelayout_btrsea_3_1_3 ;
	spritelayout_btrsea_3_1_4 ;
}


//Without pig

switch(FEAT_INDUSTRYTILES, SELF, btrsea_chimney_gfx_non_animated, relative_pos){
	relative_coord(1, 0) : spritelayout_btrsea_1_0 ;
	relative_coord(3, 0) : spritelayout_btrsea_3_0 ;
	relative_coord(1, 1) : spritelayout_btrsea_1_1 ;
	relative_coord(3, 1) : spritelayout_btrsea_3_1 ;
	spritelayout_btrsea_1_0 ;
}

switch(FEAT_INDUSTRYTILES, SELF, btrsea_chimney_gfx_animated, relative_pos){
	relative_coord(1, 0) : sw_btrsea_1_0_animation ;
	relative_coord(3, 0) : sw_btrsea_3_0_animation ;
	relative_coord(1, 1) : spritelayout_btrsea_1_1 ;
	relative_coord(3, 1) : sw_btrsea_3_1_animation ;
	sw_btrsea_1_0_animation ;
}

switch(FEAT_INDUSTRYTILES, PARENT, btrsea_chimney_gfx_decider, waiting_cargo_1 + waiting_cargo_2){
	0 : btrsea_chimney_gfx_non_animated ;
	btrsea_chimney_gfx_animated ;
}


//With pig

switch(FEAT_INDUSTRYTILES, SELF, btrsea_chimney_gfx_non_animated_pig, relative_pos){
	relative_coord(1, 0) : spritelayout_btrsea_1_0 ;
	relative_coord(3, 0) : sw_btrsea_pig_animation ;
	relative_coord(1, 1) : spritelayout_btrsea_1_1 ;
	relative_coord(3, 1) : spritelayout_btrsea_3_1 ;
	spritelayout_btrsea_1_0 ;
}

switch(FEAT_INDUSTRYTILES, SELF, btrsea_chimney_gfx_animated_pig, relative_pos){
	relative_coord(1, 0) : sw_btrsea_1_0_animation ;
	relative_coord(3, 0) : sw_btrsea_pig_animation ;
	relative_coord(1, 1) : spritelayout_btrsea_1_1 ;
	relative_coord(3, 1) : sw_btrsea_3_1_animation ;
	sw_btrsea_1_0_animation ;
}

switch(FEAT_INDUSTRYTILES, PARENT, btrsea_chimney_gfx_decider_pig, waiting_cargo_1 + waiting_cargo_2){
	0 : btrsea_chimney_gfx_non_animated_pig ;
	btrsea_chimney_gfx_animated_pig ;
}



//Pig check

random_switch(FEAT_INDUSTRYTILES, SELF, btrsea_chimney_random_pig_check){
	2 : btrsea_chimney_gfx_decider ;
	1 : btrsea_chimney_gfx_decider_pig ;
}



item(FEAT_INDUSTRYTILES, btrsea_chimney_tile){
	property{
		substitute         : 0x07 ;
		accepted_cargos    : [] ;
		land_shape_flags   : bitmask(LSF_ONLY_ON_FLAT_LAND) ;
		animation_info     : [ANIMATION_LOOPING, 4] ;
		animation_speed    : 2 ;
		animation_triggers : bitmask(ANIM_TRIGGER_INDTILE_TILE_LOOP) ;
	}
	graphics{
		default         : btrsea_chimney_random_pig_check ;
		anim_next_frame : nucrep_chimney_animation ;
	}
}


item(FEAT_INDUSTRYTILES, btrsea_empty){
	property{
		substitute         : 0x08 ;
		accepted_cargos    : [] ;
		land_shape_flags   : bitmask(LSF_ONLY_ON_FLAT_LAND) ;
	}
	graphics{
		default         : btrsea_empty_gfx_decider ;
	}
}



switch(FEAT_INDUSTRYTILES, PARENT, sw_btrsea_coal_decider, waiting_cargo_1){
	1..250     : spritelayout_btrsea_coal_med ;
	250..65536 : spritelayout_btrsea_coal_full ;
	spritelayout_btrsea_coal_empty ;
}

switch(FEAT_INDUSTRYTILES, SELF, btrsea_building_gfx_decider, relative_pos){
	relative_coord(0, 0) : spritelayout_btrsea_tank ;
	relative_coord(0, 1) : sw_btrsea_coal_decider ;
	relative_coord(2, 0) : spritelayout_btrsea_2_0 ;
	relative_coord(2, 1) : spritelayout_btrsea_2_1 ;
	spritelayout_btrsea_1_1 ;
}

item (FEAT_INDUSTRYTILES, btrsea_building_tile){
	property{
		substitute       : 0x08 ;
		accepted_cargos  : [[COAL, 8],[OIL_, 8],[URAN, 8]] ;
		land_shape_flags : bitmask(LSF_ONLY_ON_FLAT_LAND) ;
	}
	graphics{
		default    : btrsea_building_gfx_decider ;
	}
}


//Tile layout

tilelayout btrsea_tilelayout {
	0, 0 : btrsea_building_tile ;
	1, 0 : btrsea_chimney_tile ;
	2, 0 : btrsea_building_tile ;
	3, 0 : btrsea_chimney_tile ;
	4, 0 : btrsea_empty ;
	0, 1 : btrsea_building_tile ;
	1, 1 : btrsea_chimney_tile ;
	2, 1 : btrsea_building_tile ;
	3, 1 : btrsea_chimney_tile ;
	4, 1 : btrsea_empty ;
	0, 2 : btrsea_empty ;
	1, 2 : btrsea_empty ;
	2, 2 : btrsea_empty ;
	3, 2 : btrsea_empty ;
	4, 2 : btrsea_empty ;
}


produce(produce_btrsea_none   , 68 , 68 , 3 , 0 , 0);
produce(produce_btrsea_low    , 60 , 60 , 5, 3 , 0);
produce(produce_btrsea_medium , 52 , 52 , 7, 5 , 0);
produce(produce_btrsea_high   , 48 , 48 , 10, 7, 0);
produce(produce_btrsea_arrival, 150, 150, 12 ,9 , 0);

switch(FEAT_INDUSTRIES, SELF, sw_btrsea_produce, waiting_cargo_3){
	0       : produce_btrsea_none ;
	1..40   : produce_btrsea_low ;
	41..80  : produce_btrsea_medium ;
	produce_btrsea_high ;
}

item(FEAT_INDUSTRIES, btrsea_power_station, 0x01){
	property {
		substitute            : 0x01 ;
		override              : 0x01 ;
		layouts               : [btrsea_tilelayout] ;
		life_type             : IND_LIFE_TYPE_PROCESSING ;
		accept_cargo_types    : [cargotype("COAL"), cargotype("OIL_"), cargotype("URAN")];
		conflicting_ind_types : [industry_type(IND_TYPE_OLD, 0x01), industry_type(IND_TYPE_NEW, 0), industry_type(IND_TYPE_NEW, 1)] ;
		prod_cargo_types      : [cargotype("NWST")] ;
		nearby_station_name   : string(STR_POWER_STATION_STATION_NAME) ;
		prob_map_gen          : 4 ;
		prob_in_game          : 2 ;
	}	
	graphics {
		//produce_cargo_arrival : produce_btrsea_arrival ;
		produce_256_ticks     : sw_btrsea_produce ;
	}
}
# 1 "ruktsna.pnml" 2
# 1 "src/uranium_mine.pnml" 1
//Uranium mine

spriteset(gfx_uran_mine_shaft_1				, "gfx/uran_mine.png"){[ 264,   0,  64, 122, -32, -89]}
spriteset(gfx_uran_mine_shaft_2				, "gfx/uran_mine.png"){[ 334,   0,  64, 122, -32, -89]}
spriteset(gfx_uran_mine_shaft_3				, "gfx/uran_mine.png"){[ 404,   0,  64, 122, -32, -89]}
spriteset(gfx_uran_mine_building_1			, "gfx/uran_mine.png"){[ 132,   0,  64, 122, -58, -81]}
spriteset(gfx_uran_mine_building_2			, "gfx/uran_mine.png"){[ 198,   0,  64, 122, -31, -74]}
spriteset(gfx_uran_mine_chimney_building	, "gfx/uran_mine.png"){[ 0  ,   0,  64, 85 , -31, -54]}
spriteset(gfx_uran_mine_sphere_tank			, "gfx/uran_mine.png"){[ 66 , 58 ,  64, 64 , -31, -33]}
spriteset(gfx_uran_mine_shed				, "gfx/uran_mine.png"){[ 0  , 155,  67, 51 , -32, -20]}
spriteset(gfx_uran_mine_empty_tile			, "gfx/uran_mine.png"){[ 0  , 208,  64, 40 , -31,  -9]}


//Sprite layouts

// 0, 0
spritelayout spritelayout_uran_mine_shaft_1 {
	ground {	sprite : gfx_fence_n ; }
	building {	sprite : gfx_uran_mine_shaft_1 ; }
}

spritelayout spritelayout_uran_mine_shaft_2 {
	ground {	sprite : gfx_fence_n ; }
	building {	sprite : gfx_uran_mine_shaft_2 ; }
}

spritelayout spritelayout_uran_mine_shaft_3 {
	ground {	sprite : gfx_fence_n ; }
	building {	sprite : gfx_uran_mine_shaft_3 ; }
}

// 0, 1
spritelayout spritelayout_uran_mine_building_1 {
	ground {	sprite : gfx_fence_ne ; }
	building {	sprite : gfx_uran_mine_building_2 ; }
}
// 1, 1
spritelayout spritelayout_uran_mine_building_2 {
	ground {	sprite : gfx_uran_mine_empty_tile ; }
	building {	sprite : gfx_uran_mine_building_1 ; }
}


// 0, 2
spritelayout spritelayout_uran_mine_chimeny_building {
	ground {	sprite : gfx_fence_e ; }
	building {	sprite : gfx_uran_mine_chimney_building ; }
}

// 1, 0
spritelayout spritelayout_uran_mine_tank {
	ground {	sprite : gfx_fence_nw ; }
	building {	sprite : gfx_uran_mine_sphere_tank ; }
}

// 2, 0
spritelayout spritelayout_uran_mine_shed {
	ground {	sprite : gfx_uran_mine_empty_tile ; }
	building {	sprite : gfx_uran_mine_shed ; }
}

// 1, 2
spritelayout spritelayout_uran_mine_1_2 {
	ground {	sprite : gfx_fence_se ; }
}

// 2, 2
spritelayout spritelayout_uran_mine_2_2 {
	ground {	sprite : gfx_fence_s ; }
	building {	sprite : gfx_fence_s ; }
}



//Switches

switch(FEAT_INDUSTRYTILES, SELF, sw_uran_mine_gfx_decider, relative_pos){
	relative_coord(1,0) : spritelayout_uran_mine_tank ;
	relative_coord(2,0) : spritelayout_uran_mine_shed ;
	relative_coord(0,1) : spritelayout_uran_mine_building_1 ;
	relative_coord(1,1) : spritelayout_uran_mine_building_2 ;
	relative_coord(2,1) : spritelayout_uran_mine_shed ;
	relative_coord(0,2) : spritelayout_uran_mine_chimeny_building ;
	relative_coord(1,2) : spritelayout_uran_mine_1_2 ;
	relative_coord(2,2) : spritelayout_uran_mine_2_2 ;
}

switch(FEAT_INDUSTRYTILES, SELF, sw_uran_mine_shaft_animation, animation_frame){
	1 : spritelayout_uran_mine_shaft_2 ;
	2 : spritelayout_uran_mine_shaft_3 ;
	4 : spritelayout_uran_mine_shaft_2 ;
	5 : spritelayout_uran_mine_shaft_3 ;
	spritelayout_uran_mine_shaft_1 ;
}


//Tiles

item(FEAT_INDUSTRYTILES, uran_mine_tile){
	property{
		substitute			: 0 ;
		land_shape_flags	: bitmask(LSF_ONLY_ON_FLAT_LAND) ;
	}
	graphics{
		default				: sw_uran_mine_gfx_decider ;
	}
}

switch(FEAT_INDUSTRYTILES, PARENT, sw_uran_mine_shaft_next_frame, animation_frame){
	0..6 : CB_RESULT_NEXT_FRAME ;
	CB_RESULT_STOP_ANIMATION ;
}

item(FEAT_INDUSTRYTILES, uran_mine_shaft_tile){
	property{
		substitute			: 0 ;
		land_shape_flags	: bitmask(LSF_ONLY_ON_FLAT_LAND) ;
		animation_info		: [ANIMATION_NON_LOOPING, 6] ;
		animation_speed		: 2 ;
		animation_triggers	: bitmask(ANIM_TRIGGER_INDTILE_DISTRIBUTES_CARGO) ;
	}
	graphics{
		default				: sw_uran_mine_shaft_animation ;
		anim_next_frame		: sw_uran_mine_shaft_next_frame ;
	}
}



//Tile layout

tilelayout tilelayout_uran_mine{
	0,0 : uran_mine_shaft_tile ;
	0,1 : uran_mine_tile ;
	0,2 : uran_mine_tile ;
	
	1,0 : uran_mine_tile ;
	1,1 : uran_mine_tile ;
	1,2 : uran_mine_tile ;
	
	2,0 : uran_mine_tile ;
	2,1 : uran_mine_tile ;
	2,2 : uran_mine_tile ;
}

switch (FEAT_INDUSTRIES, SELF, uran_mine_water_check, water_distance){
	0..64 : CB_RESULT_LOCATION_ALLOW ;
	return string(STR_ERROR_NOT_NEAR_WATER) ;
}

switch(FEAT_INDUSTRIES, SELF, sw_uran_monthly_change, transported_last_month_1){
	0 : STORE_PERM(0x00, LOAD_PERM(0x00) - 1) ;
	STORE_PERM(0x00, LOAD_PERM(0x00) + 1) ;
}

switch(FEAT_INDUSTRIES, SELF, sw_uran_monthly_change_check, production_rate_1){
	1..8 : sw_uran_monthly_change ;
	0 : CB_RESULT_IND_PROD_MULTIPLY_BY_4 ;
	CB_RESULT_IND_PROD_NO_CHANGE ;
}

produce(uran_mine_produce_monthly, 0, 0, 0, LOAD_PERM(0x00), 0);

item(FEAT_INDUSTRIES, uran_mine){
	property {
		substitute            : 0x01 ;
		layouts               : [tilelayout_uran_mine] ;
		life_type             : IND_LIFE_TYPE_EXTRACTIVE ;
		fund_cost_multiplier  : 37 ;
		prod_cargo_types      : [cargotype("URAN")] ;
		accept_cargo_types    : [] ;
		conflicting_ind_types : [0x01] ;
		prod_multiplier       : [8] ;
		prob_random           : 3 ;
		prob_in_game          : 2 ;
		map_colour            : 255 ;
		spec_flags            : bitmask(IND_FLAG_BUILT_ONLY_AFTER_1960) ;
		new_ind_msg           : TTD_STR_NEWS_INDUSTRY_CONSTRUCTION ;
		name                  : string(STR_URANMINE_NAME) ;
		nearby_station_name   : string(STR_URANMINE_STATION_NAME) ;
	}
	graphics {
		produce_256_ticks     : uran_mine_produce_monthly ;
		location_check        : uran_mine_water_check ;
		monthly_prod_change   : sw_uran_monthly_change_check ;
		//random_prod_change    : nucrep_random_prod_change_switch ;
	}
}
# 1 "ruktsna.pnml" 2
